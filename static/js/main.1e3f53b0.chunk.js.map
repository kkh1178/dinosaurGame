{"version":3,"sources":["components/Block.js","components/Character.js","components/Game.js","components/Timer.js","App.js","index.js"],"names":["Block","animateBlock","allRefs","className","ref","block","Character","animateChar","character","Game","Timer","timer","App","useState","setAnimateChar","setAnimateBlock","message","setMessage","time","setTime","useRef","useEffect","setInterval","characterTop","parseInt","window","getComputedStyle","current","getPropertyValue","blockLeft","alert","interval","clearInterval","onClick","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"wKAWeA,EATD,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAC3B,OACI,qBACIC,UAAS,gBAAWF,EAAe,gBAAkB,IACrDG,IAAKF,EAAQG,SCOVC,EAXG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAaL,EAAc,EAAdA,QAC9B,OACI,qBACIE,IAAKF,EAAQM,UACbL,UAAS,oBAAeI,EAAc,qBAAuB,IAFjE,SAII,qBAAKJ,UAAU,YCKZM,EATF,SAAC,GAA4C,IAA1CR,EAAyC,EAAzCA,aAAcM,EAA2B,EAA3BA,YAAaL,EAAc,EAAdA,QACvC,OACI,sBAAKC,UAAU,OAAf,UACI,cAAC,EAAD,CAAOF,aAAcA,EAAcC,QAASA,IAC5C,cAAC,EAAD,CAAWK,YAAaA,EAAaL,QAASA,QCE3CQ,EARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACb,OACI,8BACI,qBAAIR,UAAU,QAAd,oBAA8BQ,QCsF3BC,MArFf,WACI,MAAsCC,oBAAS,GAA/C,mBAAON,EAAP,KAAoBO,EAApB,KACA,EAAwCD,oBAAS,GAAjD,mBAAOZ,EAAP,KAAqBc,EAArB,KACA,EAA8BF,mBAAS,QAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAGMd,EAAQe,mBACRZ,EAAYY,mBAyDlB,OA1CAC,qBAAU,WACaC,aAAY,WAC3B,IAAIC,EAAeC,SACfC,OACKC,iBAAiBlB,EAAUmB,SAC3BC,iBAAiB,QAEtBC,EAAYL,SACZC,OAAOC,iBAAiBrB,EAAMsB,SAASC,iBAAiB,SAGxDC,EAAY,IAAMA,EAAY,GAAKN,GAAgB,KACnDR,GAAgB,GAChBE,EAAW,QACXE,EAAQ,GACRW,MAAM,gBAIX,IAlBH,IAoBIC,EAAW,KAQf,OAPI9B,EACA8B,EAAWT,aAAY,WACnBH,GAAQ,SAACD,GAAD,OAAUA,EAAO,OAC1B,KACKjB,GAAyB,IAATiB,GACxBc,cAAcD,GAEX,kBAAMC,cAAcD,MAC5B,CAAC9B,EAAciB,EAAMF,IAapB,sBAAKb,UAAU,MAAf,UACI,cAAC,EAAD,CACIF,aAAcA,EACdM,YAAaA,EAEbL,QAAS,CAAEM,YAAWH,WAE1B,cAAC,EAAD,CAAOM,MAAOO,IACd,wBAAQf,UAAU,SAAS8B,QA/DlB,WAERhC,GAIDc,GAAgB,GAChBE,EAAW,QACXE,EAAQ,KALRJ,GAAgB,GAChBE,EAAW,UA2DX,SACKD,IAEL,qBAAKb,UAAU,YACf,wBAAQA,UAAU,SAAS8B,QAtBtB,WACJ1B,GACDO,GAAe,GAEnBoB,YAAW,WACPpB,GAAe,KAChB,MAgBC,sBChFZqB,IAASC,OACL,mCACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U","file":"static/js/main.1e3f53b0.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\n\nconst Block = ({ animateBlock, allRefs }) => {\n    return (\n        <div\n            className={`block ${animateBlock ? \"block-animate\" : \"\"}`}\n            ref={allRefs.block}\n        ></div>\n    );\n};\n\nexport default Block;\n","import React, { useRef } from \"react\";\n\nconst Character = ({ animateChar, allRefs }) => {\n    return (\n        <div\n            ref={allRefs.character}\n            className={`character ${animateChar ? \"character-animate \" : \"\"}`}\n        >\n            <div className=\"dino\"></div>\n        </div>\n    );\n};\n\nexport default Character;\n","import React from \"react\";\nimport Block from \"./Block\";\nimport Character from \"./Character\";\n\nconst Game = ({ animateBlock, animateChar, allRefs }) => {\n    return (\n        <div className=\"game\">\n            <Block animateBlock={animateBlock} allRefs={allRefs}></Block>\n            <Character animateChar={animateChar} allRefs={allRefs}></Character>\n        </div>\n    );\n};\n\nexport default Game;\n","import React from \"react\";\n\nconst Timer = ({ timer }) => {\n    return (\n        <div>\n            <h3 className=\"timer\">Timer: {timer}</h3>\n        </div>\n    );\n};\n\nexport default Timer;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport Game from \"./components/Game\";\nimport Timer from \"./components/Timer\";\n\nfunction App() {\n    const [animateChar, setAnimateChar] = useState(false);\n    const [animateBlock, setAnimateBlock] = useState(false);\n    const [message, setMessage] = useState(\"Play\");\n    const [time, setTime] = useState(0);\n\n    // DEfining refs to use to get the DOM element\n    const block = useRef();\n    const character = useRef();\n\n    // function that will turn on the animations when a player hits play\n    const playGame = () => {\n        // If animateBlock is false, change the state to true and set the button message to stop\n        if (!animateBlock) {\n            setAnimateBlock(true);\n            setMessage(\"Stop\");\n        } else {\n            setAnimateBlock(false);\n            setMessage(\"Play\");\n            setTime(0);\n        }\n    };\n    // UseEffect that will check to see if a player has died and will run the timer\n    useEffect(() => {\n        const checkDeath = setInterval(function () {\n            let characterTop = parseInt(\n                window\n                    .getComputedStyle(character.current)\n                    .getPropertyValue(\"top\")\n            );\n            let blockLeft = parseInt(\n                window.getComputedStyle(block.current).getPropertyValue(\"left\")\n            );\n            // Calculate if the top of the block hits the left of the other block\n            if (blockLeft < 20 && blockLeft > 0 && characterTop >= 60) {\n                setAnimateBlock(false);\n                setMessage(\"Play\");\n                setTime(0);\n                alert(\"you lose!\");\n            }\n\n            // console.log(characterTop);\n        }, 10);\n\n        let interval = null;\n        if (animateBlock) {\n            interval = setInterval(() => {\n                setTime((time) => time + 1);\n            }, 100);\n        } else if (!animateBlock && time !== 0) {\n            clearInterval(interval);\n        }\n        return () => clearInterval(interval);\n    }, [animateBlock, time, message]);\n\n    // This will tell the character to jump when the player hits the jump button\n    const jump = () => {\n        if (!animateChar) {\n            setAnimateChar(true);\n        }\n        setTimeout(function () {\n            setAnimateChar(false);\n        }, 500);\n    };\n\n    return (\n        <div className=\"App\">\n            <Game\n                animateBlock={animateBlock}\n                animateChar={animateChar}\n                // Using an object to pass down multiple references\n                allRefs={{ character, block }}\n            ></Game>\n            <Timer timer={time}></Timer>\n            <button className=\"button\" onClick={playGame}>\n                {message}\n            </button>\n            <div className=\"divider\" />\n            <button className=\"button\" onClick={jump}>\n                Jump\n            </button>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <>\n        <App />\n    </>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}